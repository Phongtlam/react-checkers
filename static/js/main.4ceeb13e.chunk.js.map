{"version":3,"sources":["enums/index.js","utils/index.js","Components/Board.js","Components/Button.js","App.js","ai.js","serviceWorker.js","index.js"],"names":["PLAYERS","getColor","x","y","color","getNewBoard","board","i","j","substring","getMovesForPiece","turn","checkPlayer","nextMoves","rowToMove","currOpp","rowToAttackOffset","getKingMoves","length","normalMove","push","pieceCoordinate","res","fillMoves","rowIdx","lower","row","Math","abs","limit","left","right","replacePiece","newPiece","substr","classNames","args","Object","keys","forEach","key","join","playerPiece","Number","Row","index","xCoord","hasHighlightedSquares","otherProps","squares","yCoord","isHighlighted","Array","isArray","indexOf","className","Square","onPieceSelected","onPieceDrop","isDraggable","onDragStart","draggable","onDrop","ev","preventDefault","onDragOver","onMouseOver","Board","highlightMoves","rowsWithHighlights","rowWithHighlights","t","getRowsWithHighlights","map","noop","Button","onClick","text","App","props","state","currentlySelected","lastGameStates","isAi","bind","revertLastMove","initializeBoard","toggleAi","lsGame","localStorage","getItem","this","setState","JSON","parse","removeItem","pop","setItem","stringify","coordinate","to","from","move","newBoard","xOffset","yOffset","prevState","newState","saveToLocalStorage","concat","runAI","aiAction","aiMove","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4ceeb13e.chunk.js","sourcesContent":["export const PLAYERS = {\n  P1: '1',\n  P2: '2',\n  K1: '3',\n  K2: '4',\n};\n","import { PLAYERS } from '../enums';\n\nexport const getColor = (x, y) => {\n  let color = 'black';\n  if (x % 2 === y % 2) {\n    color = 'white';\n  }\n  return color;\n};\n\nexport const getNewBoard = () => {\n  const board = [];\n  for (let i = 0; i < 8; i++) {\n    board[i] = '........';\n    for (let j = 0; j < 8; j++) {\n      if (i % 2 !== j % 2) {\n        if (i < 3) {\n          board[i] = board[i].substring(0, j) + '2' + board[i].substring(j + 1);\n        }\n        if (i > 4) {\n          board[i] = board[i].substring(0, j) + '1' + board[i].substring(j + 1);\n        }\n      }\n    }\n  }\n  return board;\n};\n\nexport const getMovesForPiece = (board, i, j, turn) => {\n  if (checkPlayer(board[i][j]) !== PLAYERS.P1 && checkPlayer(board[i][j]) !== PLAYERS.P2) return [];\n  if (checkPlayer(board[i][j]) !== turn) return [];\n  let nextMoves = [];\n  let rowToMove = checkPlayer(board[i][j]) === PLAYERS.P1 ? i - 1 : i + 1;\n  let currOpp = checkPlayer(board[i][j]) === PLAYERS.P1 ? PLAYERS.P2 : PLAYERS.P1;\n  let rowToAttackOffset = checkPlayer(board[i][j]) === PLAYERS.P1 ? -1 : 1;\n  if (board[i][j] === PLAYERS.K1 || board[i][j] === PLAYERS.K2) {\n    return getKingMoves(board, [i, j]);\n  }\n  if (\n    !board[rowToMove] ||\n    i < 0 ||\n    j < 0 ||\n    i > board.length - 1 ||\n    j > board[0].length - 1\n  )\n    return [];\n\n  function normalMove() {\n    if (board[rowToMove][j - 1] === '.') nextMoves.push([rowToMove, j - 1]);\n    if (board[rowToMove][j + 1] === '.') nextMoves.push([rowToMove, j + 1]);\n  }\n\n  // can attack opponent piece\n  if (\n    board[rowToMove][j - 1] === currOpp ||\n    board[rowToMove][j + 1] === currOpp\n  ) {\n    if (\n      board[rowToMove][j - 1] === currOpp &&\n      board[rowToMove + rowToAttackOffset] &&\n      board[rowToMove + rowToAttackOffset][j - 2] === '.'\n    ) {\n      nextMoves.push([rowToMove + rowToAttackOffset, j - 2]);\n    }\n    if (\n      board[rowToMove][j + 1] === currOpp &&\n      board[rowToMove + rowToAttackOffset] &&\n      board[rowToMove + rowToAttackOffset][j + 2] === '.'\n    ) {\n      nextMoves.push([rowToMove + rowToAttackOffset, j + 2]);\n    }\n\n    if (\n      !board[rowToMove + rowToAttackOffset] ||\n      (board[rowToMove + rowToAttackOffset] &&\n        !nextMoves.length &&\n        (board[rowToMove + rowToAttackOffset][j - 2] !== '.' ||\n          board[rowToMove + rowToAttackOffset][j + 2] !== '.'))\n    ) {\n      normalMove();\n    }\n  } else {\n    normalMove();\n  }\n\n  return nextMoves;\n};\n\nexport const getKingMoves = (board, pieceCoordinate) => {\n  const [x, y] = pieceCoordinate;\n  let res = [];\n\n  function fillMoves(rowIdx, lower = false) {\n    let row = board[rowIdx];\n    for (let j = 0; j < row.length; j++) {\n      if (Math.abs(x - rowIdx) === Math.abs(y - j)) {\n        if (limit.left && limit.right) break;\n        if (row[j] === \".\") {\n          if (limit.left && j - y < 0) continue;\n          if (limit.right && j - y > 0) continue;\n          res.push([rowIdx, j]);\n        } else {\n          if (!limit.left && j - y < 0) {\n            limit.left = true;\n            if (checkPlayer(row[j]) !== checkPlayer(board[x][y])) {\n              if (lower && board[rowIdx - 1] && board[rowIdx - 1][j - 1] === \".\") {\n                res.push([rowIdx - 1, j - 1]);\n              }\n              if (!lower && board[rowIdx + 1] && board[rowIdx + 1][j - 1] === \".\") {\n                res.push([rowIdx + 1, j - 1]);\n              }\n            }\n          }\n          if (!limit.right && j - y > 0) {\n            limit.right = true;\n            if (checkPlayer(row[j]) !== checkPlayer(board[x][y])) {\n              if (lower && board[rowIdx - 1] && board[rowIdx - 1][j + 1] === \".\") {\n                res.push([rowIdx - 1, j + 1]);\n              }\n              if (!lower && board[rowIdx + 1] && board[rowIdx + 1][j + 1] === \".\") {\n                res.push([rowIdx + 1, j + 1]);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  let limit = {};\n  for (let i = x + 1; i < board.length; i++) {\n    fillMoves(i, false);\n  }\n\n  limit = {};\n  for (let i = x - 1; i >= 0; i--) {\n    fillMoves(i, true);\n  }\n\n  return res;\n};\n\nexport const replacePiece = (board, i, j, newPiece) => {\n  board[i] = board[i].substring(0, j) + newPiece + board[i].substr(j + 1);\n};\n\nexport const classNames = (...args) => {\n  let res = [];\n  for (let i = 0; i < args.length; i++) {\n    if (typeof args[i] === 'string') res.push(args[i]);\n    if (typeof args[i] === 'object') {\n      Object.keys(args[i]).forEach((key) => {\n        if (args[i][key]) res.push(key);\n      });\n    }\n  }\n  return res.join(' ');\n};\n\nexport const getRowsWithHighlights = (highlightMoves = []) => {\n  if (!highlightMoves.length) return {};\n  const rowWithHighlights = {};\n  for (let i = 0; i < highlightMoves.length; i++) {\n    let t = highlightMoves[i];\n    rowWithHighlights[t[0]] = rowWithHighlights[t[0]] || [];\n    rowWithHighlights[t[0]].push(t[1]);\n  }\n  return rowWithHighlights;\n};\n\nexport const checkPlayer = (playerPiece) => {\n  if (playerPiece === \".\") return;\n  let num;\n  if (typeof playerPiece === 'string') {\n    num = Number(playerPiece);\n  } else {\n    num = playerPiece;\n  }\n  return num % 2 === 0 ? PLAYERS.P2 : PLAYERS.P1;\n};\n","import React from 'react';\nimport '../Styles/Board.css';\nimport {\n  classNames,\n  getColor,\n  getRowsWithHighlights,\n} from '../utils';\nimport { PLAYERS } from '../enums';\n\nconst Board = ({ board, highlightMoves, ...otherProps }) => {\n  const rowsWithHighlights = getRowsWithHighlights(highlightMoves);\n  return (\n    <div className=\"board-container\">\n      {board.map((row, i) => (\n        <Row\n          key={i}\n          xCoord={i}\n          row={row}\n          hasHighlightedSquares={rowsWithHighlights[i]}\n          {...otherProps}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst Row = ({ xCoord, row, hasHighlightedSquares, ...otherProps }) => {\n  const squares = [];\n  function checkHighlight(index) {\n    return !!(\n      Array.isArray(hasHighlightedSquares) &&\n      hasHighlightedSquares.indexOf(index) !== -1\n    );\n  }\n  for (let i = 0; i < row.length; i++) {\n    squares.push(\n      <Square\n        key={`${xCoord}-${i}`}\n        xCoord={xCoord}\n        yCoord={i}\n        playerPiece={row[i]}\n        isHighlighted={checkHighlight(i)}\n        {...otherProps}\n      />\n    );\n  }\n  return <div className={`board-row board-row-${xCoord}`}>{squares}</div>;\n};\n\nconst Square = ({\n  xCoord,\n  yCoord,\n  playerPiece,\n  onPieceSelected,\n  isHighlighted,\n  turn,\n  onPieceDrop,\n}) => {\n  const isDraggable = playerPiece !== '.';\n  function onDragStart() {\n    onPieceSelected({ x: xCoord, y: yCoord });\n  }\n\n  function onDrop(ev) {\n    ev.preventDefault();\n    onPieceDrop({ x: xCoord, y: yCoord });\n  }\n\n  function onDragOver(ev) {\n    ev.preventDefault();\n  }\n\n  return (\n    <div\n      className={classNames(\n        'board-square',\n        `board-square-${getColor(xCoord, yCoord)}`\n      )}\n    >\n      <div\n        className={classNames('board-square-player-piece', 'board-square-K1', {\n          'board-square-highlight-1': isHighlighted && turn === PLAYERS.P1,\n          'board-square-highlight-2': isHighlighted && turn === PLAYERS.P2,\n          'board-square-1':\n            playerPiece === PLAYERS.P1 || playerPiece === PLAYERS.K1,\n          'board-square-2':\n            playerPiece === PLAYERS.P2 || playerPiece === PLAYERS.K2,\n        })}\n        draggable={isDraggable}\n        onDragStart={onDragStart}\n        onDrop={onDrop}\n        onDragOver={onDragOver}\n        onMouseOver={onDragStart}\n      >\n        {(playerPiece === PLAYERS.K1 || playerPiece === PLAYERS.K2) && (\n          <span>KING</span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport { classNames } from \"../utils\";\nimport '../Styles/Button.css';\n\nconst noop = () => {};\n\nconst Button = ({ onClick, text, className, ...otherProps }) => (\n  <button onClick={onClick || noop} className={classNames('button', className)} {...otherProps}>\n    {text || \"\"}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport './App.css';\nimport Board from './Components/Board';\nimport { getNewBoard, getMovesForPiece, replacePiece } from './utils';\nimport { PLAYERS } from './enums';\nimport Button from './Components/Button';\nimport { aiMove } from \"./ai\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: [],\n      turn: PLAYERS.P1,\n      highlightMoves: [],\n      currentlySelected: [],\n      lastGameStates: [],\n      isAi: false\n    };\n    this.onPieceSelected = this.onPieceSelected.bind(this);\n    this.onPieceDrop = this.onPieceDrop.bind(this);\n    this.revertLastMove = this.revertLastMove.bind(this);\n    this.initializeBoard = this.initializeBoard.bind(this);\n    this.toggleAi = this.toggleAi.bind(this);\n  }\n\n  componentDidMount() {\n    const lsGame = localStorage.getItem('react-checker');\n    if (lsGame) {\n      this.setState(JSON.parse(lsGame));\n    } else {\n      this.initializeBoard();\n    }\n    // document.addEventListener(\"unload\", this.saveToLocalStorage);\n  }\n\n  // componentWillUnmount() {\n  //   document.removeEventListener(\"unload\", this.saveToLocalStorage);\n  // }\n\n  static saveToLocalStorage(state) {\n    localStorage.setItem('react-checker', JSON.stringify(state));\n  }\n\n  initializeBoard() {\n    this.setState({\n      board: getNewBoard(),\n      turn: PLAYERS.P1,\n      highlightMoves: [],\n      currentlySelected: [],\n      lastGameStates: []\n    }, () => {\n      localStorage.removeItem('react-checker');\n    });\n  }\n\n  revertLastMove() {\n    if (!this.state.lastGameStates.length) return;\n    let pop = this.state.lastGameStates.pop();\n    this.setState({\n      ...pop\n    }, () => {\n      localStorage.setItem('react-checker', JSON.stringify(pop));\n    })\n  }\n\n  onPieceSelected(coordinate) {\n    const { board, turn } = this.state;\n    const { x, y } = coordinate;\n    this.setState({\n      highlightMoves: getMovesForPiece(board, x, y, turn),\n      currentlySelected: [x, y],\n    });\n  }\n\n  onPieceDrop(to, from) {\n    const { highlightMoves, board, turn, currentlySelected } = this.state;\n    if (!from) {\n      from = currentlySelected\n    }\n    const { x, y } = to;\n    if (x === from[0] && y === from[1]) return;\n    for (let i = 0; i < highlightMoves.length; i++) {\n      let move = highlightMoves[i];\n      if (move[0] === x && move[1] === y) {\n        let newBoard = [...board];\n        replacePiece(newBoard, x, y, board[from[0]][from[1]]);\n        replacePiece(newBoard, from[0], from[1], '.');\n        // handle jump over\n        if (Math.abs(x - from[0]) > 1) {\n          let xOffset = x - from[0] > 0 ? -1 : 1;\n          let yOffset = y < from[1] ? 1 : -1;\n          replacePiece(newBoard, x + xOffset, y + yOffset, '.');\n        }\n        // king check\n        if (x === 0 && turn === PLAYERS.P1) replacePiece(newBoard, x, y, PLAYERS.K1);\n        if (x === 7 && turn === PLAYERS.P2) replacePiece(newBoard, x, y, PLAYERS.K2);\n\n        this.setState((prevState) => {\n          const newState = {\n            board: newBoard,\n            turn: prevState.turn === PLAYERS.P1 ? PLAYERS.P2 : PLAYERS.P1,\n            highlightMoves: [],\n            currentlySelected: []\n          };\n          App.saveToLocalStorage(newState);\n          newState.lastGameStates = prevState.lastGameStates.concat(prevState);\n          return newState;\n        }, () => {\n          this.runAI();\n        });\n        break;\n      }\n    }\n  }\n\n  runAI() {\n    const { board, isAi } = this.state;\n    if (isAi && this.state.turn === PLAYERS.P2) {\n      const aiAction = aiMove(board);\n      if (aiAction) {\n        this.setState({\n          highlightMoves: [aiAction.to],\n          currentlySelected: aiAction.from\n        }, () => {\n          this.onPieceDrop({ x: aiAction.to[0], y: aiAction.to[1] }, aiAction.from);\n        });\n      }\n    }\n  }\n\n  toggleAi() {\n    this.setState({\n      isAi: !this.state.isAi\n    })\n  }\n\n  render() {\n    const { board, turn, highlightMoves, isAi } = this.state;\n\n    return (\n      <div className=\"game-container\">\n        <Board\n          board={board}\n          turn={turn}\n          onPieceSelected={this.onPieceSelected}\n          highlightMoves={highlightMoves}\n          onPieceDrop={this.onPieceDrop}\n        />\n        <div className=\"game-footer\">\n          <div>\n            <p>Current Player Turn: {turn === PLAYERS.P1 ? 'PLAYER ONE' : 'PLAYER TWO'}</p>\n            <p>AI IS {isAi ? 'ON' : 'OFF'}</p>\n          </div>\n          <Button onClick={this.revertLastMove} text={`REVERT LAST MOVE`}/>\n          <Button onClick={this.initializeBoard} text={`NEW GAME`}/>\n          <Button onClick={this.toggleAi} text={`AI ${isAi ? 'ON' : 'OFF'}`} className={isAi ? 'ai-button-on' : 'ai-button-off'} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { getMovesForPiece } from \"./utils\";\nimport { PLAYERS } from \"./enums\";\n\nexport const aiMove = board => {\n\tfor (let i = 0; i < board.length; i++) {\n\t\tfor (let j = 0; j < board[0].length; j++) {\n\t\t\tconst move = getMovesForPiece(board, i, j, PLAYERS.P2);\n\t\t\tif (move.length) {\n\t\t\t\treturn {\n\t\t\t\t\tfrom: [i, j],\n\t\t\t\t\tto: move[0]\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}